//
// RemoteCreationControllerAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class RemoteCreationControllerAPI {

    /**
     Create an eduID
     
     - parameter newExternalEduID: (body)  
     - returns: UpdateExternalEduID
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createEduID(newExternalEduID: NewExternalEduID) async throws -> UpdateExternalEduID {
        return try await createEduIDWithRequestBuilder(newExternalEduID: newExternalEduID).execute().body
    }

    /**
     Create an eduID
     - POST /api/remote-creation/eduid-create
     - Create an eduID
     - BASIC:
       - type: http
       - name: basic
     - parameter newExternalEduID: (body)  
     - returns: RequestBuilder<UpdateExternalEduID> 
     */
    open class func createEduIDWithRequestBuilder(newExternalEduID: NewExternalEduID) -> RequestBuilder<UpdateExternalEduID> {
        let localVariablePath = "/api/remote-creation/eduid-create"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: newExternalEduID)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateExternalEduID>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Return a eduID pseudonym for an institution
     
     - parameter eduIDInstitutionPseudonym: (body)  
     - returns: EduIDValue
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func eduIDForInstitution(eduIDInstitutionPseudonym: EduIDInstitutionPseudonym) async throws -> EduIDValue {
        return try await eduIDForInstitutionWithRequestBuilder(eduIDInstitutionPseudonym: eduIDInstitutionPseudonym).execute().body
    }

    /**
     Return a eduID pseudonym for an institution
     - POST /api/remote-creation/eduid-institution-pseudonym
     - Return a eduID pseudonym for an institution identified by the BRIN code
     - BASIC:
       - type: http
       - name: basic
     - parameter eduIDInstitutionPseudonym: (body)  
     - returns: RequestBuilder<EduIDValue> 
     */
    open class func eduIDForInstitutionWithRequestBuilder(eduIDInstitutionPseudonym: EduIDInstitutionPseudonym) -> RequestBuilder<EduIDValue> {
        let localVariablePath = "/api/remote-creation/eduid-institution-pseudonym"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: eduIDInstitutionPseudonym)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EduIDValue>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Does an eduID exists
     
     - parameter email: (query)  
     - returns: EmailExistsResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func emailEduIDExists(email: String) async throws -> EmailExistsResponse {
        return try await emailEduIDExistsWithRequestBuilder(email: email).execute().body
    }

    /**
     Does an eduID exists
     - GET /api/remote-creation/email-eduid-exists
     - Does an eduID exists with the email
     - BASIC:
       - type: http
       - name: basic
     - parameter email: (query)  
     - returns: RequestBuilder<EmailExistsResponse> 
     */
    open class func emailEduIDExistsWithRequestBuilder(email: String) -> RequestBuilder<EmailExistsResponse> {
        let localVariablePath = "/api/remote-creation/email-eduid-exists"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "email": (wrappedValue: email.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EmailExistsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Does an eduID exists
     
     - parameter eduID: (query)  
     - returns: StatusResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func remoteCreation(eduID: String) async throws -> StatusResponse {
        return try await remoteCreationWithRequestBuilder(eduID: eduID).execute().body
    }

    /**
     Does an eduID exists
     - GET /api/remote-creation/eduid-exists
     - Does an eduID account exists with the eduID identifier
     - BASIC:
       - type: http
       - name: basic
     - parameter eduID: (query)  
     - returns: RequestBuilder<StatusResponse> 
     */
    open class func remoteCreationWithRequestBuilder(eduID: String) -> RequestBuilder<StatusResponse> {
        let localVariablePath = "/api/remote-creation/eduid-exists"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "eduID": (wrappedValue: eduID.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StatusResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Update an eduID
     
     - parameter updateExternalEduID: (body)  
     - returns: UpdateExternalEduID
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func updateEduID(updateExternalEduID: UpdateExternalEduID) async throws -> UpdateExternalEduID {
        return try await updateEduIDWithRequestBuilder(updateExternalEduID: updateExternalEduID).execute().body
    }

    /**
     Update an eduID
     - PUT /api/remote-creation/eduid-update
     - Update an eduID
     - BASIC:
       - type: http
       - name: basic
     - parameter updateExternalEduID: (body)  
     - returns: RequestBuilder<UpdateExternalEduID> 
     */
    open class func updateEduIDWithRequestBuilder(updateExternalEduID: UpdateExternalEduID) -> RequestBuilder<UpdateExternalEduID> {
        let localVariablePath = "/api/remote-creation/eduid-update"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateExternalEduID)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UpdateExternalEduID>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
